@using ui.Data
<EditForm Model="@AdvancedWebOptions">
    @if (Visible)
    {
        <div class="modal-backdrop fade show" style="display:block; background-color: rgba(0,0,0,0.5);"></div>
        <div class="modal" tabindex="-1" role="dialog" style="display:block; background-color: rgba(0,0,0,0.5);">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Advanced Filter</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="OnCancel">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="form-group">
                            <label for="startDate">Start Date</label>
                            <InputDate id="startDate" class="form-control" @bind-Value="AdvancedWebOptions.StartDate"/>
                        </div>
                        <div class="form-group">
                            <label for="stopDate">Stop Date</label>
                            <InputDate id="stopDate" class="form-control" @bind-Value="AdvancedWebOptions.StopDate"/>
                        </div>
                        <InputCheckbox @bind-Value="AdvancedWebOptions.IsDescending"/>
                        Descending
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" @onclick="OnCancel">Cancel</button>
                        <button type="button" class="btn btn-primary" @onclick="OnOk">OK</button>
                    </div>
                </div>
            </div>
        </div>
    }
</EditForm>

@code {

    #region Properties

    [Parameter] public EventCallback<WebOptions> OnApplyFilters { get; set; }
    [Parameter] public WebOptions AdvancedWebOptions { get; set; } = new();
    private bool Visible { get; set; } = false;

    #endregion

    #region Public Methods

    public void Show()
    {
        Visible = true;
        StateHasChanged();
    }

    public void Reset()
    {
        AdvancedWebOptions = new WebOptions();
    }

    #endregion

    #region Helper Methods

    private void OnCancel()
    {
        Visible = false;
        StateHasChanged();
    }

    private void OnOk()
    {
        OnApplyFilters.InvokeAsync(AdvancedWebOptions);
        Visible = false;
    }

    #endregion

}
